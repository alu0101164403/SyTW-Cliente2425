{"version":3,"file":"ActorRdfJoinEntriesSortCardinality.js","sourceRoot":"","sources":["ActorRdfJoinEntriesSortCardinality.ts"],"names":[],"mappings":";;;AACA,mFAA8E;AAE9E,yCAA8C;AAE9C;;GAEG;AACH,MAAa,kCAAmC,SAAQ,mDAAuB;IAC7E,YACE,IAAuF;QAEvF,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,IAAI,CAAC,OAAkC;QAClD,OAAO,IAAA,mBAAY,GAAE,CAAC;IACxB,CAAC;IAEM,KAAK,CAAC,GAAG,CAAC,MAAiC;QAChD,MAAM,OAAO,GAAG,CAAE,GAAG,MAAM,CAAC,OAAO,CAAE;aAClC,IAAI,CAAC,CAAC,SAAS,EAAE,UAAU,EAAE,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,GAAG,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACjH,OAAO,EAAE,OAAO,EAAE,CAAC;IACrB,CAAC;CACF;AAhBD,gFAgBC","sourcesContent":["import type { IActionRdfJoinEntriesSort, IActorRdfJoinEntriesSortOutput } from '@comunica/bus-rdf-join-entries-sort';\nimport { ActorRdfJoinEntriesSort } from '@comunica/bus-rdf-join-entries-sort';\nimport type { IActorArgs, IActorTest, TestResult } from '@comunica/core';\nimport { passTestVoid } from '@comunica/core';\n\n/**\n * An actor that sorts join entries by increasing cardinality.\n */\nexport class ActorRdfJoinEntriesSortCardinality extends ActorRdfJoinEntriesSort {\n  public constructor(\n    args: IActorArgs<IActionRdfJoinEntriesSort, IActorTest, IActorRdfJoinEntriesSortOutput>,\n  ) {\n    super(args);\n  }\n\n  public async test(_action: IActionRdfJoinEntriesSort): Promise<TestResult<IActorTest>> {\n    return passTestVoid();\n  }\n\n  public async run(action: IActionRdfJoinEntriesSort): Promise<IActorRdfJoinEntriesSortOutput> {\n    const entries = [ ...action.entries ]\n      .sort((entryLeft, entryRight) => entryLeft.metadata.cardinality.value - entryRight.metadata.cardinality.value);\n    return { entries };\n  }\n}\n"]}